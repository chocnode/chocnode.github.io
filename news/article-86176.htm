<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://chocnode.github.io/news/article-86176.htm" />
    <meta charset="utf-8">
    <title>React + TypeScript实战（一）设定事件处理函数的参数类型</title>
        <meta name="description" content="首先提出需求，给input框绑定一个change事件，打印输入框中每次输入的内容。 在设定参数类型的时候，首先想到的就是Event类型： type IState = readonly&lt;{    " />
        <link rel="icon" href="/assets/website/img/chocnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Choc Node免费机场订阅节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://chocnode.github.io/news/article-86176.htm" />
    <meta property="og:site_name" content="Choc Node免费机场订阅节点官网" />
    <meta property="og:title" content="React + TypeScript实战（一）设定事件处理函数的参数类型" />
    <meta property="og:image" content="https://chocnode.github.io/uploads/20240925/ad3a72fdcf069e5bbd9d5f2168dd85cd.webp" />
        <meta property="og:release_date" content="2025-04-01T09:49:03" />
    <meta property="og:updated_time" content="2025-04-01T09:49:03" />
        <meta property="og:description" content="首先提出需求，给input框绑定一个change事件，打印输入框中每次输入的内容。 在设定参数类型的时候，首先想到的就是Event类型： type IState = readonly&lt;{    " />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="React + TypeScript实战（一）设定事件处理函数的参数类型">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- Stylesheets -->
    <link href="/assets/website/css/chocnode/bootstrap.css" rel="stylesheet">
    <link href="/assets/website/css/chocnode/style.css" rel="stylesheet">
    <!-- Responsive File -->
    <link href="/assets/website/css/chocnode/responsive.css" rel="stylesheet">
    <!-- Color File -->
    <link href="/assets/website/css/chocnode/color.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Barlow:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- Responsive -->
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <!--[if lt IE 9]><script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.js"></script><![endif]-->
    <!--[if lt IE 9]><script src="js/respond.js"></script><![endif]-->
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-LNK9XRH7SG"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-LNK9XRH7SG');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div class="page-wrapper">
                <!-- Preloader -->
        <div class="loader-wrap">
            <div class="preloader">
                <div class="preloader-close">Preloader Close</div>
            </div>
            <div class="layer layer-one"><span class="overlay"></span></div>
            <div class="layer layer-two"><span class="overlay"></span></div>
            <div class="layer layer-three"><span class="overlay"></span></div>
        </div>
        <!-- Main Header -->
        <header class="main-header header-style-one">
            <!-- Header Upper -->
            <div class="header-upper">
                <div class="auto-container">
                    <div class="inner-container">
                        <!--Logo-->
                        <div class="logo-box">
                            <div class="logo">
                                                                <a href="/">
                                    <span>Choc Node</span>
                                </a>
                                                            </div>
                        </div>
                        <div class="right-column">
                            <!--Nav Box-->
                            <div class="nav-outer">
                                <!--Mobile Navigation Toggler-->
                                <div class="mobile-nav-toggler"><img src="/assets/website/img/chocnode/icons/icon-bar.png" alt=""></div>
                                <!-- Main Menu -->
                                <nav class="main-menu navbar-expand-md navbar-light">
                                    <div class="collapse navbar-collapse show clearfix" id="navbarSupportedContent">
                                        <ul class="navigation">
                                                                                        <li><a href="/">首页</a></li>
                                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                        <li><a href="/client.htm">客户端</a></li>
                                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                                    </ul>
                                    </div>
                                </nav>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!--End Header Upper-->
            <!-- Sticky Header  -->
            <div class="sticky-header">
                <div class="header-upper">
                    <div class="auto-container">
                        <div class="inner-container">
                            <div class="right-column">
                                <!--Nav Box-->
                                <div class="nav-outer">
                                    <!--Mobile Navigation Toggler-->
                                    <div class="mobile-nav-toggler"><img src="/assets/website/img/chocnode/icons/icon-bar.png" alt=""></div>
                                    <!-- Main Menu -->
                                    <nav class="main-menu navbar-expand-md navbar-light">
                                    </nav>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div><!-- End Sticky Menu -->
            <!-- Mobile Menu  -->
            <div class="mobile-menu">
                <div class="menu-backdrop"></div>
                <div class="close-btn"><span class="icon flaticon-remove"></span></div>
                <nav class="menu-box">
                    <div class="nav-logo mb-5"></div>
                    <div class="menu-outer">
                        <!--Here Menu Will Come Automatically Via Javascript / Same Menu as in Header-->
                    </div>
                    <!--Social Links-->
                    <div class="social-links">
                        <ul class="clearfix">
                            <li><a href="#"><span class="fab fa-twitter"></span></a></li>
                            <li><a href="#"><span class="fab fa-facebook-square"></span></a></li>
                            <li><a href="#"><span class="fab fa-pinterest-p"></span></a></li>
                            <li><a href="#"><span class="fab fa-instagram"></span></a></li>
                            <li><a href="#"><span class="fab fa-youtube"></span></a></li>
                        </ul>
                    </div>
                </nav>
            </div><!-- End Mobile Menu -->
            <div class="nav-overlay">
                <div class="cursor"></div>
                <div class="cursor-follower"></div>
            </div>
        </header>
        <!-- End Main Header -->
        <!-- Page Title -->
        <section class="page-title" style="background-image: url(/assets/website/img/chocnode/background/bg-8.jpg);">
            <div class="auto-container">
                <div class="content-box">
                    <div class="content-wrapper">
                        <div class="title">
                            <h1>React + TypeScript实战（一）设定事件处理函数的参数类型</h1>
                        </div>
                        <ul class="bread-crumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/news/">新闻资讯</a></li>
                            <li>正文</li>
                        </ul>
                    </div>
                </div>
            </div>
        </section>
        <!-- About Section -->
        <section class="about-section py-5">
            <div class="auto-container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> </h1> <p>首先提出需求，给input框绑定一个change事件，打印输入框中每次输入的内容。</p> <p>在设定参数类型的时候，首先想到的就是<code>Event</code>类型：</p> <pre><code class="prism language-react">type IState = readonly&lt;{     ... }&gt;  class Student extends React.Component&lt;any, IState&gt;{   inputChange = (e: Event) =&gt; {     console.log(((e.target) as HTMLInputElement).value);   }    render(): React.ReactNode {     return &lt;div className="container"&gt;       &lt;div className="box"&gt;         &lt;input type="text" onChange={this.inputChange}/&gt;       &lt;/div&gt;     &lt;/div&gt;   } } </code></pre> <p>但是这样会报错：</p> <pre><code>不能将类型“(e: Event) =&gt; void”分配给类型“ChangeEventHandler&lt;HTMLInputElement&gt;”。 参数“e”和“event” 的类型不兼容。 类型“ChangeEvent&lt;HTMLInputElement&gt;”缺少类型“Event”的以下属性: cancelBubble, composed, returnValue, srcElement 及其他 7 项。ts(2322) index.d.ts(2254, 9): 所需类型来自属性 "onChange"，在此处的 "DetailedHTMLProps&lt;InputHTMLAttributes&lt;HTMLInputElement&gt;, HTMLInputElement&gt;" 类型上声明该属性 </code></pre> <p>从这个报错信息来看，<code>onChange</code>事件需要的似乎是一个这样类型的处理函数<code>ChangeEventHandler&lt;HTMLInputElement&gt;</code></p> <p>现在先引入<code>ChangeEventHandler</code>，看一看它对应的源码：</p> <pre><code class="prism language-ts"><span class="token keyword">type</span> <span class="token class-name">ChangeEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>ChangeEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span> </code></pre> <p>这意味着，我们的<code>onChange</code>事件是一个<code>EventHandler</code>，它自带的<code>event</code>参数类型为<code>ChangeEvent&lt;T&gt;</code>，由于这里是一个输入框，所以应该为<code>event</code>设置参数为<code>ChangeEvent&lt;HTMLInputElement&gt;</code>再来试试，成功获取到了输入内容！</p> <pre><code class="prism language-react">type IState = readonly&lt;{     ... }&gt;  class Student extends React.Component&lt;any, IState&gt;{   inputChange = (e: ChangeEvent&lt;HTMLInputElement&gt;) =&gt; {     console.log((e.target.value));   }    render(): React.ReactNode {     return &lt;div className="container"&gt;       &lt;div className="box"&gt;         &lt;input type="text" onChange={this.inputChange}/&gt;       &lt;/div&gt;     &lt;/div&gt;   } } </code></pre> <p>如果你使用的是hooks写法，也可以这样写，不过这并不是本节的重点：</p> <pre><code class="prism language-ts">inputChange <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">useCallback</span><span class="token generic class-name"><span class="token operator">&lt;</span>React<span class="token punctuation">.</span>ChangeEventHandler<span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{<!-- --></span>     <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> </code></pre> <p>接下来给扩展一个功能，如果有很多个输入框，是否可以共用同一个<code>onChange</code>方法呢？</p> </h1> <p>比如说，我现在需要多个输入框，分别输入学号、姓名、年龄的信息</p> <p>如果分别给每个输入框绑定不同的事件，那就要写三个相似度非常高的函数，这样不太美观：</p> <pre><code class="prism language-react">import React, { ChangeEvent } from 'react'  type IState = Readonly&lt;{   no: string,   name: string,   age: string }&gt;  class Student extends React.Component&lt;any, IState&gt;{   readonly state: IState = {     no: "",     name: "",     age: "",   	list: []   }      inputChangeNo = (key: string, e: ChangeEvent&lt;HTMLInputElement&gt;) =&gt; {     // 不同的输入框触发change事件，最后打印的key值不同     console.log(key, e.target.value);   }      inputChangeName = (key: string, e: ChangeEvent&lt;HTMLInputElement&gt;) =&gt; {     console.log(key, e.target.value);   }      inputChangeAge = (key: string, e: ChangeEvent&lt;HTMLInputElement&gt;) =&gt; {     console.log(key, e.target.value);   }    render(): React.ReactNode {     return &lt;div className="container"&gt;       &lt;div className="box"&gt;         &lt;input           type="text"           value={this.state.no}           onChange={(e) =&gt; this.inputChangeNo("no", e)}           placeholder="输入学号"         /&gt;         &lt;input           type="text"           value={this.state.name}           onChange={(e) =&gt; this.inputChangeName("name", e)}           placeholder="输入姓名"         /&gt;         &lt;input           type="text"           value={this.state.age}           onChange={(e) =&gt; this.inputChangeAge("age", e)}           placeholder="输入年龄"         /&gt;       &lt;/div&gt;     &lt;/div&gt;   } }  export default Student </code></pre> <p>看起来我们似乎可以执行这样的操作：</p> <pre><code class="prism language-ts"><span class="token function-variable function">inputChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> e<span class="token operator">:</span> ChangeEvent<span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span>         <span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token operator">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value     <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> </code></pre> <p>但是对于<code>key</code>值来说，他是一个<strong>字符串索引类型数据</strong>，所以一定需要给他绑定<strong>对应的类型</strong>。</p> <p>在这个案例中，我们需要用到的属性有：</p> <pre><code class="prism language-ts"><span class="token keyword">type</span> <span class="token class-name">IState</span> <span class="token operator">=</span> Readonly<span class="token operator">&lt;</span><span class="token punctuation">{<!-- --></span>   no<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>   name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>   age<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>   list<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span> </code></pre> <p>所以索引对应的类型应该有<code> "no" | "name" | "age "</code>，成功设定！</p> <pre><code class="prism language-react">import React, { ChangeEvent } from 'react'  interface PeopleType{   id: number   name: string   age: string }  interface IState{   [name: string]: string | PeopleType[]   list: PeopleType[]   no: string,   name: string,   age: string }  class People extends React.Component&lt;any, IState&gt;{   readonly state: IState = {     no: "",     name: "",     age: "",     list: []   }    inputChange = &lt;K extends keyof IState&gt;(key: K, e: ChangeEvent&lt;HTMLInputElement&gt;) =&gt; {     this.setState({       [key]: e.target.value     })   }    render(): React.ReactNode {     return &lt;div className="container"&gt;       &lt;div className="box"&gt;         &lt;input           type="text"           value={this.state.no}           onChange={(e) =&gt; this.inputChange("no", e)}           placeholder="输入学号"         /&gt;         &lt;input           type="text"           value={this.state.name}           onChange={(e) =&gt; this.inputChange("name", e)}           placeholder="输入姓名"         /&gt;         &lt;input           type="text"           value={this.state.age}           onChange={(e) =&gt; this.inputChange("age", e)}           placeholder="输入年龄"         /&gt;       &lt;/div&gt;     &lt;/div&gt;   } }  export default People </code></pre> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-85450.htm">动物疫苗生产原料 动物疫苗生产原料有哪些</a></p>
                                        <p>下一个：<a href="/news/article-86177.htm">给宠物医院的好评怎么写（给宠物医院的好评怎么写简短）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-75723.htm" title="广州有领养宠物猫的地方吗最近（广州有领养宠物猫的地方吗?）">广州有领养宠物猫的地方吗最近（广州有领养宠物猫的地方吗?）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-27-node-share-links.htm" title="3月27日→20.5M/S|2025年最新免费节点Shadowrocket/SSR/V2ray/Clash订阅链接地址">3月27日→20.5M/S|2025年最新免费节点Shadowrocket/SSR/V2ray/Clash订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-73696.htm" title="兽药采购网（兽药采购网站）">兽药采购网（兽药采购网站）</a></li>
                        <li class="py-2"><a href="/news/article-67787.htm" title="动物疫苗在哪打的针图片视频（动物注射疫苗注射哪里）">动物疫苗在哪打的针图片视频（动物注射疫苗注射哪里）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-25-node-share-links.htm" title="3月25日→22.9M/S|2025年最新免费节点Clash/Shadowrocket/V2ray/SSR订阅链接地址">3月25日→22.9M/S|2025年最新免费节点Clash/Shadowrocket/V2ray/SSR订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-69745.htm" title="动物疫苗和人体疫苗生产有什么区别呢英语 动物疫苗和人体疫苗生产有什么区别呢英语翻译">动物疫苗和人体疫苗生产有什么区别呢英语 动物疫苗和人体疫苗生产有什么区别呢英语翻译</a></li>
                        <li class="py-2"><a href="/news/article-77086.htm" title="宠物领养协议法律效力怎么写才有效（宠物领养协议范本）">宠物领养协议法律效力怎么写才有效（宠物领养协议范本）</a></li>
                        <li class="py-2"><a href="/news/article-79827.htm" title="宠物医院美团好评50字通用评论 宠物医院美团好评50字通用评论怎么写">宠物医院美团好评50字通用评论 宠物医院美团好评50字通用评论怎么写</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-10-free-node-subscribe-links.htm" title="3月10日→21.7M/S|2025年最新免费节点Clash/SSR/V2ray/Shadowrocket订阅链接地址">3月10日→21.7M/S|2025年最新免费节点Clash/SSR/V2ray/Shadowrocket订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-69744.htm" title="开一家宠物医院大概要多少钱?（开一家宠物医院大概要多少钱费用）">开一家宠物医院大概要多少钱?（开一家宠物医院大概要多少钱费用）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">3</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
                <footer class="main-footer" style="background-image: url(/assets/website/img/chocnode/background/bg-1.jpg);">
            <!-- Footer Bottom -->
            <div class="footer-bottom">
                <div class="auto-container">
                    <div class="wrapper-box">
                        <div class="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <div class="text">
                                <a href="/">Choc Node免费机场订阅节点官网</a> 版权所有
                                <br />
                                Powered by WordPress
                            </div>
                        </div>
                        <div class="footer-menu">
                            <ul>
                                <li><a href="#">Sitemap </a></li>
                                <li><a href="#">Terms & Conditions</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
        <!--Scroll to top-->
        <div class="scroll-to-top scroll-to-target" data-target="html"><span class="flaticon-right-arrow-4"></span></div>
        <script src="/assets/website/js/frontend/chocnode/jquery.js"></script>
        <script src="/assets/website/js/frontend/chocnode/popper.min.js"></script>
        <script src="/assets/website/js/frontend/chocnode/bootstrap.min.js"></script>
        <script src="/assets/website/js/frontend/chocnode/bootstrap-select.min.js"></script>
        <script src="/assets/website/js/frontend/chocnode/jquery.fancybox.js"></script>
        <script src="/assets/website/js/frontend/chocnode/isotope.js"></script>
        <script src="/assets/website/js/frontend/chocnode/owl.js"></script>
        <script src="/assets/website/js/frontend/chocnode/appear.js"></script>
        <script src="/assets/website/js/frontend/chocnode/wow.js"></script>
        <script src="/assets/website/js/frontend/chocnode/lazyload.js"></script>
        <script src="/assets/website/js/frontend/chocnode/scrollbar.js"></script>
        <script src="/assets/website/js/frontend/chocnode/TweenMax.min.js"></script>
        <script src="/assets/website/js/frontend/chocnode/swiper.min.js"></script>
        <script src="/assets/website/js/frontend/chocnode/jquery.polyglot.language.switcher.js"></script>
        <script src="/assets/website/js/frontend/chocnode/jquery.ajaxchimp.min.js"></script>
        <script src="/assets/website/js/frontend/chocnode/parallax-scroll.js"></script>
        <script src="/assets/website/js/frontend/chocnode/script.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
    </div>
    <!--End pagewrapper-->
</body>

</html>