<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://chocnode.github.io/news/article-43069.htm" />
    <meta charset="utf-8">
    <title>C语言中常用的字符数组函数</title>
        <meta name="description" content="所有的字符数组处理函数都包括在 &lt;string.h&gt;这个头文件中   一、strlen 函数 原型：size_t strlen(char const* string); 在C语言中如何计算" />
        <link rel="icon" href="/assets/website/img/chocnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Choc Node免费机场订阅节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://chocnode.github.io/news/article-43069.htm" />
    <meta property="og:site_name" content="Choc Node免费机场订阅节点官网" />
    <meta property="og:title" content="C语言中常用的字符数组函数" />
    <meta property="og:image" content="https://chocnode.github.io/uploads/20240925/ae30af1e05c49c7df5bca45d8f1fa42c.webp" />
        <meta property="og:release_date" content="2025-01-19T07:10:47" />
    <meta property="og:updated_time" content="2025-01-19T07:10:47" />
        <meta property="og:description" content="所有的字符数组处理函数都包括在 &lt;string.h&gt;这个头文件中   一、strlen 函数 原型：size_t strlen(char const* string); 在C语言中如何计算" />
        
    <!-- Stylesheets -->
    <link href="/assets/website/css/chocnode/bootstrap.css" rel="stylesheet">
    <link href="/assets/website/css/chocnode/style.css" rel="stylesheet">
    <!-- Responsive File -->
    <link href="/assets/website/css/chocnode/responsive.css" rel="stylesheet">
    <!-- Color File -->
    <link href="/assets/website/css/chocnode/color.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Barlow:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- Responsive -->
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <!--[if lt IE 9]><script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.js"></script><![endif]-->
    <!--[if lt IE 9]><script src="js/respond.js"></script><![endif]-->
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-LNK9XRH7SG"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-LNK9XRH7SG');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div class="page-wrapper">
                <!-- Preloader -->
        <div class="loader-wrap">
            <div class="preloader">
                <div class="preloader-close">Preloader Close</div>
            </div>
            <div class="layer layer-one"><span class="overlay"></span></div>
            <div class="layer layer-two"><span class="overlay"></span></div>
            <div class="layer layer-three"><span class="overlay"></span></div>
        </div>
        <!-- Main Header -->
        <header class="main-header header-style-one">
            <!-- Header Upper -->
            <div class="header-upper">
                <div class="auto-container">
                    <div class="inner-container">
                        <!--Logo-->
                        <div class="logo-box">
                            <div class="logo">
                                                                <a href="/">
                                    <span>ChocNode</span>
                                </a>
                                                            </div>
                        </div>
                        <div class="right-column">
                            <!--Nav Box-->
                            <div class="nav-outer">
                                <!--Mobile Navigation Toggler-->
                                <div class="mobile-nav-toggler"><img src="/assets/website/img/chocnode/icons/icon-bar.png" alt=""></div>
                                <!-- Main Menu -->
                                <nav class="main-menu navbar-expand-md navbar-light">
                                    <div class="collapse navbar-collapse show clearfix" id="navbarSupportedContent">
                                        <ul class="navigation">
                                                                                        <li><a href="/">首页</a></li>
                                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                                        <li><a href="#">关于</a></li>
                                            <li><a href="#">联系</a></li>
                                        </ul>
                                    </div>
                                </nav>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!--End Header Upper-->
            <!-- Sticky Header  -->
            <div class="sticky-header">
                <div class="header-upper">
                    <div class="auto-container">
                        <div class="inner-container">
                            <div class="right-column">
                                <!--Nav Box-->
                                <div class="nav-outer">
                                    <!--Mobile Navigation Toggler-->
                                    <div class="mobile-nav-toggler"><img src="/assets/website/img/chocnode/icons/icon-bar.png" alt=""></div>
                                    <!-- Main Menu -->
                                    <nav class="main-menu navbar-expand-md navbar-light">
                                    </nav>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div><!-- End Sticky Menu -->
            <!-- Mobile Menu  -->
            <div class="mobile-menu">
                <div class="menu-backdrop"></div>
                <div class="close-btn"><span class="icon flaticon-remove"></span></div>
                <nav class="menu-box">
                    <div class="nav-logo mb-5"></div>
                    <div class="menu-outer">
                        <!--Here Menu Will Come Automatically Via Javascript / Same Menu as in Header-->
                    </div>
                    <!--Social Links-->
                    <div class="social-links">
                        <ul class="clearfix">
                            <li><a href="#"><span class="fab fa-twitter"></span></a></li>
                            <li><a href="#"><span class="fab fa-facebook-square"></span></a></li>
                            <li><a href="#"><span class="fab fa-pinterest-p"></span></a></li>
                            <li><a href="#"><span class="fab fa-instagram"></span></a></li>
                            <li><a href="#"><span class="fab fa-youtube"></span></a></li>
                        </ul>
                    </div>
                </nav>
            </div><!-- End Mobile Menu -->
            <div class="nav-overlay">
                <div class="cursor"></div>
                <div class="cursor-follower"></div>
            </div>
        </header>
        <!-- End Main Header -->
        <!-- Page Title -->
        <section class="page-title" style="background-image: url(/assets/website/img/chocnode/background/bg-8.jpg);">
            <div class="auto-container">
                <div class="content-box">
                    <div class="content-wrapper">
                        <div class="title">
                            <h1>C语言中常用的字符数组函数</h1>
                        </div>
                        <ul class="bread-crumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/news/">新闻资讯</a></li>
                            <li>正文</li>
                        </ul>
                    </div>
                </div>
            </div>
        </section>
        <!-- About Section -->
        <section class="about-section py-5">
            <div class="auto-container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <blockquote> <blockquote> <p>所有的字符数组处理函数都包括在 &lt;string.h&gt;这个头文件中</p> </blockquote> </blockquote> <h2><a id="strlen__1" rel="nofollow"></a>一、strlen 函数</h2> <p>原型：<code>size_t strlen(char const* string);</code></p> <p>在C语言中如何计算一个数组或者一个字符数组的长度？<code>在C语言中没有字符串类型，字符串是存放在字符型数组中</code>，所以一般形式的字符串就是数组。<br /> 一般来说，大家都是使用<code>sizeof</code>来计算数组长度的：</p> <pre><code class="prism language-c"><span class="token comment">// 整型数组</span><span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">int</span> length<span class="token operator">=</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">/</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p><code>sizeof</code>是一个操作符，返回的是一个对象或类型所占的字节大小。<br /> 但是在字符数组中<code>sizeof</code>返回的往往不是我们需要的。<br /> 因为字符数组的往往需要比其他数组多占一个空间长度。比如一个有效字符串的长度为9，那么实际长度则为10，而第10个字符是<code>'\0'</code>。表示字符串结束。</p> <p>使用<code>strlen</code>函数则会返回有效长度。</p> <pre><code class="prism language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span><span class="token keyword">int</span><span class="token function">myLen</span><span class="token punctuation">(</span><span class="token keyword">const</span><span class="token keyword">char</span><span class="token operator">*</span>line<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">int</span> strlen<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>line<span class="token punctuation">[</span>strlen<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'\0'</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>     strlen<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> strlen<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span><span class="token keyword">char</span><span class="token keyword">const</span><span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">char</span> line<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"hello"</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"SIZEOF的长度= %d\n"</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//6</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"strlen的长度= %d"</span><span class="token punctuation">,</span><span class="token function">myLen</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 5</span><span class="token keyword">return</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <h2><a id="strcmp_41" rel="nofollow"></a>二、strcmp</h2> <p>原型：<code>int strcmp(char const *s1, char const *s2, size_t len);</code>;</p> <p>功能：比较两个字符串。如果s1小于s2，strcmp函数返回一个小于零的值。如果s1大于s2，函数返回一个大于零的值。如果两个字符串相等，函数就返回零。</p> <pre><code class="prism language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;string.h&gt;</span></span><span class="token keyword">int</span><span class="token function">mycmp</span><span class="token punctuation">(</span><span class="token keyword">const</span><span class="token keyword">char</span><span class="token operator">*</span>c1<span class="token punctuation">,</span><span class="token keyword">const</span><span class="token keyword">char</span><span class="token operator">*</span>c2<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">*</span>c1<span class="token operator">==</span><span class="token operator">*</span>c2<span class="token operator">&amp;&amp;</span><span class="token operator">*</span>c1<span class="token operator">==</span><span class="token string">'\0'</span><span class="token punctuation">)</span><span class="token comment">// 通过指针的自增来比较，同时判断是否有到了结束位置</span><span class="token punctuation">{<!-- --></span>     c1<span class="token operator">++</span><span class="token punctuation">;</span>     c2<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> result<span class="token operator">=</span><span class="token operator">*</span>c1<span class="token operator">-</span><span class="token operator">*</span>c2<span class="token punctuation">;</span><span class="token keyword">return</span> result<span class="token operator">==</span><span class="token number">0</span><span class="token operator">?</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token punctuation">(</span>result<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span><span class="token keyword">char</span><span class="token keyword">const</span><span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">char</span> char1<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"bb"</span><span class="token punctuation">;</span><span class="token keyword">char</span> char2<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"a"</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span><span class="token function">strcmp</span><span class="token punctuation">(</span>char1<span class="token punctuation">,</span> char2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 1</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token function">mycmp</span><span class="token punctuation">(</span>char1<span class="token punctuation">,</span> char2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 1</span><span class="token keyword">return</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <h2><a id="strcat_70" rel="nofollow"></a>三、strcat函数</h2> <p>原型：<code>char *strcat(char *dst, char const *src);</code></p> <p>功能：将一个字符串添加(连接)到另一个字符串的后面。</p> <p>注意：src和dst的所指的内存区域不能重叠，如果发生重叠，其结果是未定义的。</p> <pre><code class="prism language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;string.h&gt;</span></span><span class="token keyword">char</span><span class="token operator">*</span><span class="token function">mycat</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span>des<span class="token punctuation">,</span><span class="token keyword">const</span><span class="token keyword">char</span><span class="token operator">*</span>src<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">char</span><span class="token operator">*</span>temp<span class="token operator">=</span> des<span class="token punctuation">;</span><span class="token comment">//定义临时指针指向目标字符数组</span>   temp<span class="token operator">=</span> des<span class="token operator">+</span><span class="token function">strlen</span><span class="token punctuation">(</span>des<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将目标字符串移入到结尾</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">*</span>temp<span class="token operator">++</span><span class="token operator">=</span><span class="token operator">*</span>src<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//通过指针自增实现赋值</span><span class="token operator">*</span>temp<span class="token operator">=</span><span class="token string">'\0'</span><span class="token punctuation">;</span><span class="token comment">//将目标字符串的结尾</span><span class="token keyword">return</span> des<span class="token punctuation">;</span><span class="token comment">// char *temp = des;</span><span class="token comment">// while (*temp != '\0')</span><span class="token comment">// {<!-- --></span><span class="token comment">//   temp++;</span><span class="token comment">// }</span><span class="token comment">// while ((*temp++ = *src++))</span><span class="token comment">//   *temp = '\0';</span><span class="token comment">// return des;</span><span class="token punctuation">}</span><span class="token keyword">int</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span><span class="token keyword">char</span><span class="token keyword">const</span><span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token comment">/* code */</span><span class="token keyword">char</span> c1<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"hello"</span><span class="token punctuation">;</span><span class="token keyword">char</span> c2<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"world"</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s\n"</span><span class="token punctuation">,</span><span class="token function">mycat</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span> c2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//helloworld</span><span class="token keyword">return</span><span class="token number">0</span><span class="token punctuation">;</span></code></pre> <h2><a id="strcpy_109" rel="nofollow"></a>四、strcpy</h2> <p>原型：<code>char *strcpy(char *dst, char const *src);</code></p> <p><strong>功能</strong>：将参数src字符串复制到dst参数中。如果参数src和dst在内存中出现重叠，其结果是未定义的。由于dst参数将进行修改，所以它必须是个字符数组或者是一个指向动态分配内存的数组的指针，<code>不能使用字符串常量</code>。返回参数dst的一份拷贝。<br /><strong>注意</strong>：</p> <p>目标参数dst的以前内容将被覆盖并丢失。即使新的字符串比dst原先的内存更短，由于新字符串是以NUL字符结尾，所以老字符串最后剩余的几个字符也会被有效的删除。如果字符串比数组长，多余的字符仍被复制，<code>它们将覆盖原先存储于数组后面的内存空间的值</code>。所以必须保证目标字符数组的空间足以容纳需要复制的字符串。</p> <pre><code class="prism language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;string.h&gt;</span></span><span class="token keyword">char</span><span class="token operator">*</span><span class="token function">mycpy</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span>dst<span class="token punctuation">,</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token keyword">const</span> restrict src<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">int</span> idx<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>     dst<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token operator">=</span> src<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">;</span>     idx<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span>   dst<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'\0'</span><span class="token punctuation">;</span><span class="token keyword">return</span> dst<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span><span class="token keyword">char</span><span class="token keyword">const</span><span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">char</span> c1<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"adcdee"</span><span class="token punctuation">;</span><span class="token keyword">char</span> c2<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"eeeeddddddddd"</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s\n"</span><span class="token punctuation">,</span><span class="token function">strcpy</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span> c2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//eeeeddddddddd</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s\n"</span><span class="token punctuation">,</span><span class="token function">mycpy</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span> c2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//eeeeddddddddd</span><span class="token keyword">return</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <h2><a id="strchr_144" rel="nofollow"></a>五、strchr函数</h2> <p>原型：<code>char *strchr(char const *str, int ch);</code></p> <p>功能：在一个字符串中查找一个特定字符。</p> <p>注意：第2个参数是一个整型值。但是，它包含了一个字符值。strchr在字符串str中查找字符ch第一次出现的位置，找到后函数返回一个指向该位置的指针。如果该字符并不存在于str中，函数就返回一个NULL指针。strrchr的功能和strchr基本一致，只是它所返回的是一个指向字符串中该字符最后一次出现的位置(最右边那个)。<br /><strong>为了直观编程显示，第二个参数设成字符型</strong></p> <pre><code class="prism language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;string.h&gt;</span></span><span class="token keyword">char</span><span class="token operator">*</span><span class="token function">Strchr</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span>dst<span class="token punctuation">,</span><span class="token keyword">const</span><span class="token keyword">char</span> str<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">*</span>dst<span class="token operator">!=</span><span class="token string">'\0'</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">*</span>dst<span class="token operator">==</span> str<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> dst<span class="token punctuation">;</span><span class="token punctuation">}</span>     dst<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span><span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span><span class="token keyword">char</span><span class="token keyword">const</span><span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">char</span> c1<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"hello"</span><span class="token punctuation">;</span><span class="token keyword">char</span><span class="token operator">*</span>p<span class="token operator">=</span><span class="token function">strchr</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span><span class="token string">'l'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s\n"</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//llo</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s\n"</span><span class="token punctuation">,</span><span class="token function">Strchr</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span><span class="token string">'l'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//llo</span><span class="token keyword">return</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p>// 暂时就总结这么多，以后补充</p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-42585.htm">被猫咬了怎样判断用不用打狂犬疫苗（被猫咬了怎样判断用不用打狂犬疫苗了）</a></p>
                                        <p>下一个：<a href="/news/article-43070.htm">猫的疫苗三针隔多久打第二针疫苗（猫打疫苗三针间隔时间）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-10-18-node-share.htm" title="10月18日→22.2M/S|2024年最新免费节点Choc Node订阅链接地址">10月18日→22.2M/S|2024年最新免费节点Choc Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-34255.htm" title="动物疫苗发展现状及未来展望怎么写（动物疫苗板块前景分析）">动物疫苗发展现状及未来展望怎么写（动物疫苗板块前景分析）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-3-free-node-subscribe-links.htm" title="12月3日→20.5M/S|2024年最新免费节点Choc Node订阅链接地址">12月3日→20.5M/S|2024年最新免费节点Choc Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-6-node-share-links.htm" title="11月6日→20.8M/S|2024年最新免费节点Choc Node订阅链接地址">11月6日→20.8M/S|2024年最新免费节点Choc Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-13-free-high-speed-nodes.htm" title="12月13日→18.8M/S|2024年最新免费节点Choc Node订阅链接地址">12月13日→18.8M/S|2024年最新免费节点Choc Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-14-free-node-subscribe-links.htm" title="1月14日→20.7M/S|2025年最新免费节点Choc Node订阅链接地址">1月14日→20.7M/S|2025年最新免费节点Choc Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-2-free-node-subscribe-links.htm" title="12月2日→18.1M/S|2024年最新免费节点Choc Node订阅链接地址">12月2日→18.1M/S|2024年最新免费节点Choc Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-19-node-share.htm" title="11月19日→22.8M/S|2024年最新免费节点Choc Node订阅链接地址">11月19日→22.8M/S|2024年最新免费节点Choc Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-5-free-high-speed-nodes.htm" title="12月5日→20.8M/S|2024年最新免费节点Choc Node订阅链接地址">12月5日→20.8M/S|2024年最新免费节点Choc Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-23-free-high-speed-nodes.htm" title="10月23日→20M/S|2024年最新免费节点Choc Node订阅链接地址">10月23日→20M/S|2024年最新免费节点Choc Node订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">57</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">91</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
                <footer class="main-footer" style="background-image: url(/assets/website/img/chocnode/background/bg-1.jpg);">
            <!-- Footer Bottom -->
            <div class="footer-bottom">
                <div class="auto-container">
                    <div class="wrapper-box">
                        <div class="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <div class="text">
                                <a href="/">Choc Node免费机场订阅节点官网</a> 版权所有
                                <br />
                                Powered by WordPress
                            </div>
                        </div>
                        <div class="footer-menu">
                            <ul>
                                <li><a href="#">Sitemap </a></li>
                                <li><a href="#">Terms & Conditions</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
        <!--Scroll to top-->
        <div class="scroll-to-top scroll-to-target" data-target="html"><span class="flaticon-right-arrow-4"></span></div>
        <script src="/assets/website/js/frontend/chocnode/jquery.js"></script>
        <script src="/assets/website/js/frontend/chocnode/popper.min.js"></script>
        <script src="/assets/website/js/frontend/chocnode/bootstrap.min.js"></script>
        <script src="/assets/website/js/frontend/chocnode/bootstrap-select.min.js"></script>
        <script src="/assets/website/js/frontend/chocnode/jquery.fancybox.js"></script>
        <script src="/assets/website/js/frontend/chocnode/isotope.js"></script>
        <script src="/assets/website/js/frontend/chocnode/owl.js"></script>
        <script src="/assets/website/js/frontend/chocnode/appear.js"></script>
        <script src="/assets/website/js/frontend/chocnode/wow.js"></script>
        <script src="/assets/website/js/frontend/chocnode/lazyload.js"></script>
        <script src="/assets/website/js/frontend/chocnode/scrollbar.js"></script>
        <script src="/assets/website/js/frontend/chocnode/TweenMax.min.js"></script>
        <script src="/assets/website/js/frontend/chocnode/swiper.min.js"></script>
        <script src="/assets/website/js/frontend/chocnode/jquery.polyglot.language.switcher.js"></script>
        <script src="/assets/website/js/frontend/chocnode/jquery.ajaxchimp.min.js"></script>
        <script src="/assets/website/js/frontend/chocnode/parallax-scroll.js"></script>
        <script src="/assets/website/js/frontend/chocnode/script.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
    </div>
    <!--End pagewrapper-->
</body>

</html>