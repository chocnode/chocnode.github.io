<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://chocnode.github.io/news/article-39616.htm" />
    <meta charset="utf-8">
    <title>OAuth 2.1 框架_在线工具</title>
        <meta name="description" content="当前版本：v2-1-05 失效时间：2022/09/08 本文对部分原文翻译，同时加了一些笔记，以便理解。    单词 译意     identifiler 识别码   Resource Owner " />
        <link rel="icon" href="/assets/website/img/chocnode/favicon.ico" type="image/x-icon"/>
    <!-- Stylesheets -->
    <link href="/assets/website/css/chocnode/bootstrap.css" rel="stylesheet">
    <link href="/assets/website/css/chocnode/style.css" rel="stylesheet">
    <!-- Responsive File -->
    <link href="/assets/website/css/chocnode/responsive.css" rel="stylesheet">
    <!-- Color File -->
    <link href="/assets/website/css/chocnode/color.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Barlow:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- Responsive -->
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <!--[if lt IE 9]><script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.js"></script><![endif]-->
    <!--[if lt IE 9]><script src="js/respond.js"></script><![endif]-->
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-LNK9XRH7SG"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-LNK9XRH7SG');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div class="page-wrapper">
                <!-- Preloader -->
        <div class="loader-wrap">
            <div class="preloader">
                <div class="preloader-close">Preloader Close</div>
            </div>
            <div class="layer layer-one"><span class="overlay"></span></div>
            <div class="layer layer-two"><span class="overlay"></span></div>
            <div class="layer layer-three"><span class="overlay"></span></div>
        </div>
        <!-- Main Header -->
        <header class="main-header header-style-one">
            <!-- Header Upper -->
            <div class="header-upper">
                <div class="auto-container">
                    <div class="inner-container">
                        <!--Logo-->
                        <div class="logo-box">
                            <div class="logo">
                                                                <a href="/">
                                    <span>ChocNode</span>
                                </a>
                                                            </div>
                        </div>
                        <div class="right-column">
                            <!--Nav Box-->
                            <div class="nav-outer">
                                <!--Mobile Navigation Toggler-->
                                <div class="mobile-nav-toggler"><img src="/assets/website/img/chocnode/icons/icon-bar.png" alt=""></div>
                                <!-- Main Menu -->
                                <nav class="main-menu navbar-expand-md navbar-light">
                                    <div class="collapse navbar-collapse show clearfix" id="navbarSupportedContent">
                                        <ul class="navigation">
                                                                                        <li><a href="/">首页</a></li>
                                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                                        <li><a href="#">关于</a></li>
                                            <li><a href="#">联系</a></li>
                                        </ul>
                                    </div>
                                </nav>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!--End Header Upper-->
            <!-- Sticky Header  -->
            <div class="sticky-header">
                <div class="header-upper">
                    <div class="auto-container">
                        <div class="inner-container">
                            <div class="right-column">
                                <!--Nav Box-->
                                <div class="nav-outer">
                                    <!--Mobile Navigation Toggler-->
                                    <div class="mobile-nav-toggler"><img src="/assets/website/img/chocnode/icons/icon-bar.png" alt=""></div>
                                    <!-- Main Menu -->
                                    <nav class="main-menu navbar-expand-md navbar-light">
                                    </nav>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div><!-- End Sticky Menu -->
            <!-- Mobile Menu  -->
            <div class="mobile-menu">
                <div class="menu-backdrop"></div>
                <div class="close-btn"><span class="icon flaticon-remove"></span></div>
                <nav class="menu-box">
                    <div class="nav-logo mb-5"></div>
                    <div class="menu-outer">
                        <!--Here Menu Will Come Automatically Via Javascript / Same Menu as in Header-->
                    </div>
                    <!--Social Links-->
                    <div class="social-links">
                        <ul class="clearfix">
                            <li><a href="#"><span class="fab fa-twitter"></span></a></li>
                            <li><a href="#"><span class="fab fa-facebook-square"></span></a></li>
                            <li><a href="#"><span class="fab fa-pinterest-p"></span></a></li>
                            <li><a href="#"><span class="fab fa-instagram"></span></a></li>
                            <li><a href="#"><span class="fab fa-youtube"></span></a></li>
                        </ul>
                    </div>
                </nav>
            </div><!-- End Mobile Menu -->
            <div class="nav-overlay">
                <div class="cursor"></div>
                <div class="cursor-follower"></div>
            </div>
        </header>
        <!-- End Main Header -->
        <!-- Page Title -->
        <section class="page-title" style="background-image: url(/assets/website/img/chocnode/background/bg-8.jpg);">
            <div class="auto-container">
                <div class="content-box">
                    <div class="content-wrapper">
                        <div class="title">
                            <h1>OAuth 2.1 框架_在线工具</h1>
                        </div>
                        <ul class="bread-crumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/news/">新闻资讯</a></li>
                            <li>正文</li>
                        </ul>
                    </div>
                </div>
            </div>
        </section>
        <!-- About Section -->
        <section class="about-section py-5">
            <div class="auto-container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				</h1> <p>当前版本：v2-1-05<br /> 失效时间：2022/09/08</p> <p>本文对部分<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://datatracker.ietf.org/doc/html/draft-ietf-oauth-v2-1-05"  target="_blank"  rel="nofollow">原文</a>翻译，同时加了一些笔记，以便理解。</p> <table> <thead> <tr> <th>单词</th> <th>译意</th> </tr> </thead> <tbody> <tr> <td>identifiler</td> <td>识别码</td> </tr> <tr> <td>Resource Owner</td> <td>资源拥有者</td> </tr> <tr> <td>User-Agent</td> <td>用户代理</td> </tr> <tr> <td>Authorization Code</td> <td>授权码</td> </tr> <tr> <td>Access Token</td> <td>访问令牌</td> </tr> <tr> <td>refresh token</td> <td>刷新令牌</td> </tr> <tr> <td>scope</td> <td>可选</td> </tr> <tr> <td>endpoint</td> <td>端点</td> </tr> <tr> <td>AS</td> <td>授权服务器</td> </tr> </tbody> </table> <h2 id="许可类型">许可类型</h2> <p>要获取访问令牌，客户端需要从资源拥有者那里获得授权。本规约定义了以下几种授权许可类型。</p> <ul> <li>授权码（authorization code）</li> <li>客户端证书（client credentials）</li> <li>刷新令牌（refresh token）</li> </ul> <p>本规约还提供了扩展机制，以便定义其他许可类型。</p> <h3 id="授权码许可">授权码许可</h3> <p>授权码许可类型用于获取访问令牌和刷新令牌。</p> <p>许可类型使用额外的授权端点，实现授权服务器与资源拥有者交互，以便获取资源访问准许。</p> <p>由于这是一个基于重定向的工作流，客户端必须能够通过资源拥有者（比如某个用户）的用户代理（一般指 web 浏览器）初始化工作流，并且能够从授权服务器重定向回来。</p> <p>授权码流程图</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220507/19e7deff3d5aa3b58b1d9fa6cf8b089f.jpg" alt="OAuth 2.1 框架_在线工具"></p> <p><strong>注意</strong>：图中所示的步骤（1）、（2）、（3）在通过用户代理的时候会分为两个部分。</p> <p>图中包括的步骤如下：</p> <p>（1）客户端通过将资源拥有者的用户代理指向授权端点来发起授权流程。请求携带客户端自己的识别码、code challenge（来自生成的 code verifier）、请求范围（可选）、local state（可选，这里的意思是可以传递一些客户端的数据，回调的时候会把这些数据原样传回来）、回调 URI，当授权服务器许可（或拒绝）的时候会向该 URI 发送用户代理。</p> <pre><code class="language-ad-note">关于 code verifier，可查看下一节 [[#授权请求]] </code></pre> <p>（2）授权服务器认证资源拥有者的身份（通过用户代理），并确定资源拥有者是许可还是拒绝客户端的访问请求。</p> <p>（3）假设资源拥有者许可访问，则授权服务器通过之前（在发起请求时或者客户端注册期间）提供的重定向 URI  将用户代理重定向回客户端。重定向 URI 里包括授权码和客户端之前提供的任何 local state。</p> <p>（4）客户端从授权服务器的令牌端点请求访问令牌，请求中需要携带上个步骤中获取的授权码、以及客户端自己的 code verifier。当发起请求时，如果授权服务器可以认证身份，客户端将通过授权服务器认证身份。客户端为了验证，将携带重定向 URI 以便获取授权码。</p> <p>（5）授权服务器尽可能的认证客户端的身份，验证授权码、code verifier，并且保证接收到的 URI 与步骤（3）中重定向到客户端的 URI 是匹配的。如果通过认证，授权服务器返回反问令牌，以及刷新令牌（可选）。</p> <h4 id="授权请求">授权请求</h4> <p>要发起授权请求，客户端需要将参数添加到授权服务器的授权端点 URI 上，以此构建授权请求 URI。客户端最终会将用户代理重定向到此 URI 上来发起请求。</p> <pre><code class="language-ad-note">这里看上去不是很好理解，我提供一个示例 ``` java 	private final String authorizationRequestUri = UriComponentsBuilder   	  //授权服务端点 URI       .fromPath("/oauth2/authorize")  	  //参数       .queryParam("response_type", "code")        .queryParam("client_id", "messaging-client")         .queryParam("scope", "openid message.read message.write")         .queryParam("state", "state")         .queryParam("redirect_uri", this.redirectUri)         .toUriString(); </code></pre> <p>客户端每次发起授权请求都使用唯一的密钥，以此避免授权码注入，CSRF 攻击。客户端先生成此密钥，它可以在使用授权码时使用它来证明使用授权码的客户端就是请求它的客户端。</p> <p>客户端通过 application/x-www-form-urlencoded 格式，添加以下参数到授权端点 URI 的查询组件中，构造客户端的请求 URI。</p> <table> <thead> <tr> <th>参数</th> <th>是否必填</th> <th>说明</th> </tr> </thead> <tbody> <tr> <td>response_type</td> <td>必填</td> <td>授权端点支持不同的请求集合和响应数据。客户端根据 response_type 的值来决定授权流程。本规约定义了值的代码，该代码必须用于指示客户端要使用授权码流程。</td> </tr> </tbody> </table> <p>扩展的响应类型可能是包含空格分隔符（%x20）的列表，这些响应类型的值在列表中顺序不会产生影响（例如，响应类型 a b 等同于 b a）。这类组合响应类型的含义有它们各自的规范定义。</p> <p>某些扩展响应类型由 OpenID 定义。</p> <p>如果授权请求缺少 response_type 参数，或者如果响应类型无法理解，授权服务器必须返回错误响应。</p> <table> <thead> <tr> <th>参数</th> <th>是否必填</th> <th>说明</th> </tr> </thead> <tbody> <tr> <td>client_id</td> <td>是</td> <td>客户端识别码</td> </tr> <tr> <td>code_challenge</td> <td>是或推荐</td> <td>Code challenge</td> </tr> <tr> <td>code_challenge_method</td> <td>可选</td> <td>默认值 plain，Code verifier 转换方法为 S256 或 plain</td> </tr> <tr> <td>redirect_uri</td> <td>可选</td> <td></td> </tr> <tr> <td>scope</td> <td>可选</td> <td></td> </tr> <tr> <td>state</td> <td>可选</td> <td>客户端用于维护请求与回调之间的状态。授权服务器在重定向用户代理回客户端时将此值加入请求中</td> </tr> </tbody> </table> <p>code_verifier 是唯一的熵很高的加密随机字符串，每次授权请求生成一次，使用 unreserved 字符包括 [A-Z]、[a-z]、[0-9]、“-”、“.”、“ _ ”、“～”，最小字符串长度为 43，最大字符长度 128。</p> <pre><code class="language-ad-note">1948年，香农Claude E. Shannon引入信息（熵），将其定义为离散随机事件的出现概率。一个系统越是有序，信息熵就越低；反之，一个系统越是混乱，信息熵就越高。所以说，信息熵可以被认为是系统有序化程度的一个度量。 </code></pre> <p>客户端临时存储 code_verifier，计算用于授权请求的 code_challenge。</p> <p>用于 code_verifier 的 ABNF（巴科斯范式）如下。</p> <pre><code class="language-ABNF">code-verifier = 43 * 128unreserved unreserved = ALPHA / DIGIT / "-" / "." / " _ " / "~" ALPHA = %x41-5A / %x61-7A DIGIT = %x30-39 </code></pre> <p><strong>注意</strong>：code verifier 的熵应该足够高，以至于值不会被猜到。建议使用合适的随机数生成器来创建一个 32  octet 的序列。每个 octect 序列使用 base64url 编码后生成一个 43 octet 的 URL 安全的字符串作为 code verifier。</p> <pre><code class="language-ad-note">1 octet = 8 bits  为什么不使用 byte，因为 byte 的语义存在歧义，历史上的 byte 不是固定的 8 位。 </code></pre> <p>客户端然后在 code verifier 的基础上创建 code_challenge：</p> <p>S256<br /> code_challenge = BASE64URL-ENCODE(SHA256(ASCII(code_verifier)))</p> <p>plain<br /> code_challenge = code_verifier</p> <p>如果客户端能够使用 S256，则必须使用 S256，因为服务器上强制执行（Mandatory To Implement，MTI） S256。客户端只能在由于某些技术原因不支持 S256 的情况下，才能使用 pain，例如，受环境限制不能使用哈希函数，并且通过带外配置或者授权服务器元数据得知服务器支持 plain。</p> <p>用于 code_challenge 的 ABNF（巴科斯范式）如下。</p> <pre><code class="language-ABNF">code-challenge = 43 * 128unreserved unreserved = ALPHA / DIGIT / "-" / "." / " _ " / "~" ALPHA = %x41-5A / %x61-7A DIGIT = %x30-39 </code></pre> <p>code_challenge 和 code_verifier 的属性吸取了 OAuth 2.0 的扩展”Proof-Key for Code Exchange“，也叫做 <a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://datatracker.ietf.org/doc/html/rfc7636"  target="_blank"  rel="nofollow">PKCE</a>，也是这项技术的起源地。</p> <p>授权服务器必须支持 code_challenge 和 code_verifier 参数。</p> <p>客户度必须使用 code_challenge 和 code_verifier，除了一些在 <a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://datatracker.ietf.org/doc/html/draft-ietf-oauth-v2-1-05#section-7.6"  target="_blank"  rel="nofollow"> 7.6 节</a> 中描述的条件外，服务器也必须强制客户端使用 code_challenge 和 code_verifier。在当前情况下，我们仍然推荐按照下面列出的方式强制使用 code_challenge 和 code_verifier。</p> <p>state 和 scope 参数不应该在 plain 文本中包含和客户端、资源拥有者相关的敏感信息，因为它们能够通过不安全的通道传输，或者以不安全的方式存储。</p> <p>客户端通过 HTTP 重定向或者用户代理提供的其他方式，指示资源拥有者构造 URI。</p> <p>例如，客户端指示用户代理发起以下 HTTP 请求（额外的断行符只是为了显示的目的）：</p> <pre><code class="language-curl">GET /authorize?response_type=code&amp;client_id=s6BhdRkqt3&amp;state=xyz        &amp;redirect_uri=https%3A%2F%2Fclient%2Eexample%2Ecom%2Fcb        &amp;code_challenge=6fdkQaPm51l13DSukcAH3Mdx7_ntecHYd1vi3n0hMZY        &amp;code_challenge_method=S256 HTTP/1.1    Host: server.example.com </code></pre> <p>授权服务器验证请求，以确保所有的必须的参数都有效。</p> <p>特别地，如果请求中存在 redirect_uri，授权服务器必须验证，确保其值与客户端注册的 URI 匹配。当比较两个 URI 时，授权服务器必须一个字符一个字符的比较。</p> <p>如果请求有效，授权服务器认证资源拥有者的身份，并且获取授权决策（通过询问资源拥有者或者通过其他方式建立批准）。</p> <pre><code class="language-ad-note">这种获取授权决策，具体体现，比如：使用微信登录其他 App 时，会跳转到微信 App，询问用户是否允许。 </code></pre> <p>当完成决策后，授权服务器指示用户代理使用 HTTP 重定向响应或用户代理提供的其他方式，提供客户端重定向 URI。</p> <h4 id="授权响应">授权响应</h4> <p>如果资源拥有者许可访问请求，授权服务器将颁发一个授权码并传送给客户端，使用 application/x-www-form-urlencoded 格式，在重定向 URI 查询组件中添加以下参数：</p> <table> <thead> <tr> <th>参数</th> <th>是否必填</th> <th>说明</th> </tr> </thead> <tbody> <tr> <td>code</td> <td>是</td> <td>由授权服务器生成的授权码，并且对客户端不透明。授权码在颁发后，必须在短期内失效，以防泄漏。推荐授权码的生命周期为 10 分钟。客户端只能使用一次授权码。如果使用授权码超过一次，授权服务器必须拒绝请求，并且应该撤销（如果可能的话）基于上次颁发的授权码生成的所有访问令牌和刷新令牌。授权码与客户端识别码、code challenge、重定向 URI绑定。</td> </tr> <tr> <td>state</td> <td>是</td> <td>如果客户端授权请求中包含 state 参数。确切值来自客户端。</td> </tr> </tbody> </table> <p>例如，授权服务器通过发送以下 HTTP 响应重定向用户代理：</p> <pre><code class="language-curl">HTTP/1.1 302 Found Location: https://client.example.com/cb?code=SplxlOBeZQQYbYS6WxSbIA              &amp;state=xyz </code></pre> <p>客户端必须忽略不能识别的响应参数。本规约未定义授权码字符串的大小。客户端应该避免假定授权码的大小。授权服务器应该记录颁发的授权码的大小。</p> <p>服务器关联颁发的授权码与 code_challenge 的确切方法，超出了本规约的范围。code challenge 应该存储在服务器上，并且在服务器上关联授权码。code_challenge 和 code_challenge_method 的值可以以加密的方式存储在代码自身中，但是服务器不能在响应参数重包括 code_challenge 的值，只能提取 AS 以外的实体。</p> <p>客户端<strong>必须</strong>防止攻击者注入授权码到授权响应中。使用 code_challenge 和 code_verifier 可以阻止注入授权码，原因是如果 code_verifier 不匹配，授权服务器将拒绝令牌请求。</p> <h5 id="错误响应">错误响应</h5> <p>如果请求由于重定向 URI 缺失、无效、或者不匹配失败，或者如果客户端识别码缺失、无效，授权服务器<strong>应该</strong>通知资源拥有者错误，并且<strong>不能</strong>自动将用户代理重定向到错误的 URI。</p> <p>AS <strong>必须</strong>拒绝不携带 code_challenge 来自公共客户端的请求，并且必须<strong>拒绝</strong>来自其他客户端的这类请求，除非能保证客户端客户端不会以其他方式注入授权码。</p> <p>如果服务器不支持请求的 code_challenge_method 转换方法，授权端点<strong>必须</strong>返回错误响应，并将 error 的值设为 invalid_request。error_description 或者 error_uri <strong>应该</strong>解释错误的本质，比如，不支持的转换算法。</p> <p>如果资源拥有者拒绝访问请求，或者如果请求失败是因为除了重定向 URI 缺失或失效之外的原因，授权服务器应该使用 application/x-www-form-urlencoded 格式，向重定向 URI 查询组件中添加以下参数：</p> <table> <thead> <tr> <th>参数</th> <th>是否必填</th> <th>描述</th> <th>错误代码</th> <th>错误代码描述</th> </tr> </thead> <tbody> <tr> <td>error</td> <td>必填</td> <td>错误参数<strong>不能</strong>包含特殊代码 %x20-21、%x23-5B、%x5D-7E。</td> <td>invalid_request</td> <td>请求缺少必须的参数，存在无效的参数值，同一个参数出现多次，个税不正确</td> </tr> <tr> <td></td> <td></td> <td></td> <td>unauthorized_client</td> <td>使用此方式请求授权码时，客户端未被授权</td> </tr> <tr> <td></td> <td></td> <td></td> <td>access_denied</td> <td>资源拥有者或者授权服务器拒绝请求</td> </tr> <tr> <td></td> <td></td> <td></td> <td>unsupported_response_type</td> <td>授权服务器不支持使用此方法获取授权码</td> </tr> <tr> <td></td> <td></td> <td></td> <td>invalid_scope</td> <td>请求范围无效、未知、或者格式错误</td> </tr> <tr> <td></td> <td></td> <td></td> <td>server_error</td> <td>授权服务器遇到未知的情况，进而不能完成请求。（此错误代码时必须的，因为不能通过 HTTP 重定向，返回 500 错误到客户端）</td> </tr> <tr> <td></td> <td></td> <td></td> <td>temporarily_unavailable</td> <td>由于授权服务器当前不能处理超载或维护状态，导致不能处理请求。（此错误代码时必须的，因为不能通过 HTTP 重定向，返回 503 状态到客户端）</td> </tr> <tr> <td>error_description</td> <td>可选</td> <td>具备可读性的文本，提供额外的信息，当发生错误时，协助开发者理解错误。来自 error_description 的参数不能包含特殊字符 %x20-21、%x23-5B、%x5D-7E。</td> <td></td> <td></td> </tr> <tr> <td>error_uri</td> <td>可选</td> <td>指定一个包含错误信息的 web 页面 URI，为客户端开发者提供和错误相关的额外信息。error_uri 的参数符合 URI 引用的语法，因此不能包含特殊字符 %x20-21、%x23-5B、%x5D-7E。</td> <td></td> <td></td> </tr> <tr> <td>state</td> <td>必填</td> <td>如果客户端授权请求中存在 state 参数，则该参数是必填。该参数的值来自客户端。</td> <td></td> <td></td> </tr> </tbody> </table> <p>例如，授权服务器通过发送以下请求重定向用户代理：</p> <pre><code class="language-curl">HTTP/1.1 302 Found Location: https://client.example.com/cb?error=access_denied&amp;state=xyz </code></pre> <h4 id="令牌端点扩展">令牌端点扩展</h4> <p>授权准许类型在令牌端点通过 authorization_code 的 grant_type 的值来识别。</p> <p>如果设置此值。则需要设置以下额外令牌请求参数：</p> <table> <thead> <tr> <th>参数</th> <th>是否必填</th> <th>描述</th> </tr> </thead> <tbody> <tr> <td>code</td> <td>必填</td> <td>来自授权服务器的授权码</td> </tr> <tr> <td>redirect_uri</td> <td>必填</td> <td>如果授权请求中有 redirect_uri 参数，如[[#授权请求]]中所述，在此情形下，它们的值<strong>必须</strong>相同。如果授权请求中没有 redirect_uri，此参数是可选的。</td> </tr> <tr> <td>code_verifier</td> <td>必填</td> <td>如果授权请求中有 code_challenge 参数。<strong>绝对不能</strong>在其他地方使用。原始的 code verifier 字符串。</td> </tr> </tbody> </table> <p>例如，客户端发起如下 HTTP 请求（包含用于显示目的地换行符）：</p> <pre><code class="language-curl">POST /token HTTP/1.1 Host: server.example.com Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW Content-Type: application/x-www-form-urlencoded  grant_type=authorization_code&amp;code=SplxlOBeZQQYbYS6WxSbIA &amp;redirect_uri=https%3A%2F%2Fclient%2Eexample%2Ecom%2Fcb &amp;code_verifier=3641a2d12d66101249cdf7a79c000c1f8c05d2aafcf14bf146497bed </code></pre> <p>除了[[请求令牌]]的处理规则外，授权服务器<strong>必须</strong>：</p> <ul> <li>确保授权码颁发给经过认证的受信任的客户端或者有凭据的客户端，如果是公开客户端，确保授权码颁发给请求中的 client_id。</li> <li>验证授权码的有效性</li> <li>验证 code_verifier 参数，当且仅当授权请求中存在 code_challenge 参数时。</li> <li>如果存在 code_verifier，则从接收到的 code_verifier 中计算 code challenge，并与之前关联的 code_challenge 经过客户端指定的 code_challenge_method 转换后进行比较，以此验证 code_verifier。</li> <li>确保包含 redirect_uri 参数，如果 redirect_uri 如[[#授权请求]]中描述的那样包含在初始授权请求中，如果存在，则要确保它们的值是相同的。</li> </ul> <h3 id="客户端证书许可">客户端证书许可</h3> <p>当客户端在其控制范围内请求访问受保护的资源时，客户端能够只使用它的客户端证书请求访问令牌（或者其他支持的认证方式），或者另一个资源拥有者提前安排了授权服务器（处理方式超出了此规约的范围）。</p> <p>客户端证书许可类型<strong>必须</strong>只能被受信任的客户端或者有凭据的客户端使用。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220507/9255ac0e55de6fa22b86e2fc8486e215.jpg" alt="OAuth 2.1 框架_在线工具"></p> <p>客户端证书许可包含以下步骤：<br /> （1）通过授权服务器做客户端身份认证，从令牌端点请求访问令牌。<br /> （2）授权服务器认证客户端身份，如果有效，颁发访问令牌。</p> <h4 id="令牌端点扩展-1">令牌端点扩展</h4> <p>授权许可类型通过 grant_type 的值 client_credentials 识别令牌终端。</p> <p>如果设置了此值，则不需要[[#令牌请求]]之外参数：</p> <p>例如，客户端发起如下 HTTP 请求：</p> <pre><code class="language-curl">POST /token HTTP/1.1 Host: server.example.com Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW Content-Type: application/x-www-form-urlencoded  grant_type=client_credentials </code></pre> <p>授权服务器<strong>必须</strong>认证客户端的身份。</p> <h3 id="刷新令牌许可">刷新令牌许可</h3> <p>刷新令牌是授权服务器颁发给客户端的凭证，可以用它基于现有的许可方式获取新的（刷新）访问令牌。客户端使用此选项，要么因为上一个访问令牌过期，要么因为上次获取的访问令牌 scope 比各自通过的许可窄，并且在相同的许可下请求 scope 不同的访问令牌。</p> <p>刷新令牌<strong>必须</strong>安全保存，只在授权服务器和颁发刷新令牌的客户端之间共享。授权服务器<strong>必须</strong>在刷新令牌和颁发给的客户端之间维护绑定关系。</p> <p>当客户端身份被认证时，授权服务器<strong>必须</strong>验证刷新令牌和客户端身份的绑定关系。当客户端无法认证身份时，授权服务器<strong>应该</strong>颁发 sender-constrained 刷新令牌或者使用刷新令牌反转（参见 [[#刷新访问令牌]]）。</p> <p>授权服务器<strong>必须</strong>确保刷新令牌不能被未授权的第三方生成、修改、或者猜着生成有效的刷新令牌。</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-39615.htm">vue打包后整合到springboot项目、并打包成jar上传到Linux服务器运行【前后端分离开发、整体部署到Linux服务器】</a></p>
                                        <p>下一个：<a href="/news/article-40095.htm">jenkins 新增用户和修改用户名密码</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-39616.htm" title="OAuth 2.1 框架_在线工具">OAuth 2.1 框架_在线工具</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-17-free-node-subscribe-links.htm" title="11月17日→20M/S|2024年最新免费节点Choc Node订阅链接地址">11月17日→20M/S|2024年最新免费节点Choc Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-30-node-share.htm" title="10月30日→20.6M/S|2024年最新免费节点Choc Node订阅链接地址">10月30日→20.6M/S|2024年最新免费节点Choc Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-26-node-share.htm" title="12月26日→22.4M/S|2024年最新免费节点Choc Node订阅链接地址">12月26日→22.4M/S|2024年最新免费节点Choc Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-30448.htm" title="宠物店医疗许可证（宠物医疗许可证哪里办）">宠物店医疗许可证（宠物医疗许可证哪里办）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-14-free-node-subscribe-links.htm" title="12月14日→18.6M/S|2024年最新免费节点Choc Node订阅链接地址">12月14日→18.6M/S|2024年最新免费节点Choc Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-15-free-high-speed-nodes.htm" title="12月15日→20.9M/S|2024年最新免费节点Choc Node订阅链接地址">12月15日→20.9M/S|2024年最新免费节点Choc Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-31878.htm" title="瑞派宠物医院分布（瑞派宠物医院在哪）">瑞派宠物医院分布（瑞派宠物医院在哪）</a></li>
                        <li class="py-2"><a href="/news/article-40582.htm" title="被打过疫苗的宠物抓伤人需要打针吗（被打过疫苗的宠物抓伤人需要打针吗多少钱）">被打过疫苗的宠物抓伤人需要打针吗（被打过疫苗的宠物抓伤人需要打针吗多少钱）</a></li>
                        <li class="py-2"><a href="/news/article-27168.htm" title="动物用疫苗种类有多少种（动物用疫苗种类有多少种图片）">动物用疫苗种类有多少种（动物用疫苗种类有多少种图片）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">45</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">91</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
                <footer class="main-footer" style="background-image: url(/assets/website/img/chocnode/background/bg-1.jpg);">
            <!-- Footer Bottom -->
            <div class="footer-bottom">
                <div class="auto-container">
                    <div class="wrapper-box">
                        <div class="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <div class="text">
                                <a href="/">Choc Node免费机场订阅节点官网</a> 版权所有
                                <br />
                                Powered by WordPress
                            </div>
                        </div>
                        <div class="footer-menu">
                            <ul>
                                <li><a href="#">Sitemap </a></li>
                                <li><a href="#">Terms & Conditions</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
        <!--Scroll to top-->
        <div class="scroll-to-top scroll-to-target" data-target="html"><span class="flaticon-right-arrow-4"></span></div>
        <script src="/assets/website/js/frontend/chocnode/jquery.js"></script>
        <script src="/assets/website/js/frontend/chocnode/popper.min.js"></script>
        <script src="/assets/website/js/frontend/chocnode/bootstrap.min.js"></script>
        <script src="/assets/website/js/frontend/chocnode/bootstrap-select.min.js"></script>
        <script src="/assets/website/js/frontend/chocnode/jquery.fancybox.js"></script>
        <script src="/assets/website/js/frontend/chocnode/isotope.js"></script>
        <script src="/assets/website/js/frontend/chocnode/owl.js"></script>
        <script src="/assets/website/js/frontend/chocnode/appear.js"></script>
        <script src="/assets/website/js/frontend/chocnode/wow.js"></script>
        <script src="/assets/website/js/frontend/chocnode/lazyload.js"></script>
        <script src="/assets/website/js/frontend/chocnode/scrollbar.js"></script>
        <script src="/assets/website/js/frontend/chocnode/TweenMax.min.js"></script>
        <script src="/assets/website/js/frontend/chocnode/swiper.min.js"></script>
        <script src="/assets/website/js/frontend/chocnode/jquery.polyglot.language.switcher.js"></script>
        <script src="/assets/website/js/frontend/chocnode/jquery.ajaxchimp.min.js"></script>
        <script src="/assets/website/js/frontend/chocnode/parallax-scroll.js"></script>
        <script src="/assets/website/js/frontend/chocnode/script.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
    </div>
    <!--End pagewrapper-->
</body>

</html>